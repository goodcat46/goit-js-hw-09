{"mappings":"YAGY,IAANA,EAAcC,SAASC,cAAc,SAEpB,SAAdC,EAAcC,EAAUC,GAEZ,IAAbC,EAAgBC,KAAKC,SAAW,GAEW,OAA1C,IAAIC,SAAQ,SAACC,EAASC,GAEqCC,YAArD,WAELN,EACFI,EAAQ,CAAEN,WAAUC,UAGLM,EAAR,CAAEP,WAAUC,S,GAEpBA,E,IAIyCL,EAApCa,iBAAiB,UAAU,SAAAC,GAETA,EAAtBC,iBAEuC,IAAvCC,EAAaC,OAAOjB,EAAYK,MAAMa,OAC1CC,QAAQC,IAAIJ,GACZ,IAAIK,EAAcJ,OAAOjB,EAAYsB,OAAOJ,OAC5CC,QAAQC,IAAIC,GACZ,IAAIE,EAAYN,OAAOjB,EAAYwB,KAAKN,OACxCC,QAAQC,IAAIG,GAG4B,IAArC,IAAIE,EAAI,EAAGA,EAAIJ,EAAaI,GAAK,EACpCtB,EAAcsB,EAAGT,GAEyBU,MAAlC,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBc,QAAQC,IAAI,uBAA6CQ,OAApBxB,GAAY,EAAE,QAAYwB,OAANvB,EAAM,M,IAGxCwB,OAAlB,SAAAF,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBc,QAAQC,IAAI,sBAA4CQ,OAApBxB,GAAY,EAAE,QAAYwB,OAANvB,EAAM,M,IAGlEW,GAAcO,C","sources":["src/js/03-promises.js"],"sourcesContent":["//todo найважче завдання для мене із тих яке мав нагоду виконувати, максимально мені не зрозумілі мета і суть\n\n//* елемент форми\nconst formElement = document.querySelector('.form');\n//* функція створенняпромісу\nfunction createPromise(position, delay) {\n  //* генерування віповіді\n  const shouldResolve = Math.random() > 0.3;\n  //* функція повертає новостворений проміс через клас ПРОМІС\n  return new Promise((resolve, reject) => {\n    //* встановлюєтся наймаут де затримка буде отримана у процесі виклику функції\n    setTimeout(() => {\n      //* якщо TRUE тоді обереться RESOLVE (у 70% випадків згідно формули Math.random()>0.3)\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        //* інакше обереться REJECT\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n//* едемент форми отримує слухача події а він колбек функцію\nformElement.addEventListener('submit', event => {\n  //* відміна стандартної події форми\n  event.preventDefault();\n  //* значення з інпутів зчитуємо у момент сабміту форми\n    let inputDelay = Number(formElement.delay.value);\n    console.log(inputDelay);\n    let inputAmount = Number(formElement.amount.value);\n    console.log(inputAmount);\n    let inputStep = Number(formElement.step.value);\n    console.log(inputStep);\n\n    //* цикл FOR де параметри це отримані значення із інпутів\n  for (let i = 0; i < inputAmount; i += 1) {\n    createPromise(i, inputDelay)\n    //* у випадку RESOLVE спрацює наш THEN. помилку він проігнорить\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position += 1} in ${delay}ms`);\n      })\n      //* у випадку помилки, її зловить CATCH\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position += 1} in ${delay}ms`);\n      });\n      //* на кожній ітерації затримка збільшується\n    inputDelay += inputStep;\n  }\n});\n"],"names":["$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","inputDelay","Number","value","console","log","inputAmount","amount","inputStep","step","i","then","param","concat","catch"],"version":3,"file":"03-promises.7ea3c9a5.js.map"}